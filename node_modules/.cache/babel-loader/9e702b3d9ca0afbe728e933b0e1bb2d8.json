{"ast":null,"code":"var _jsxFileName = \"/Users/dexter/Thinkful/pomodoro-timer/src/pomodoro/TimeDisplay.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction TimeDisplay({\n  session\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"));\n}\n\nfunction secondsToMinutesAndSeconds(totalSeconds) {\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n  const minutesString = minutes < 10 ? \"0\" + minutes : minutes.toString();\n  const secondsString = seconds < 10 ? `0${seconds}` : seconds.toString();\n  return `${minutesString}:${secondsString}`;\n}\n\nexport { secondsToMinutesAndSeconds };\nexport default TimeDisplay;","map":{"version":3,"sources":["/Users/dexter/Thinkful/pomodoro-timer/src/pomodoro/TimeDisplay.js"],"names":["React","secondsToDuration","TimeDisplay","session","label","timeRemaining","secondsToMinutesAndSeconds","totalSeconds","minutes","Math","floor","seconds","minutesString","toString","secondsString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAkC;AAE9B,sBACI,uDACI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OADL,aACKA,OADL,uBACKA,OAAO,CAAEC,KADd,uBADJ,eAII;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,aAAV,CADtB,eAJJ,CADJ;AAUH;;AAED,SAASC,0BAAT,CAAoCC,YAApC,EAAkD;AAC9C,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAG,EAA1B,CAAhB;AACA,QAAMI,OAAO,GAAGJ,YAAY,GAAG,EAA/B;AACA,QAAMK,aAAa,GAAGJ,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAO,CAACK,QAAR,EAArD;AACA,QAAMC,aAAa,GAAGH,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAAO,CAACE,QAAR,EAArD;AACA,SAAQ,GAAED,aAAc,IAAGE,aAAc,EAAzC;AACH;;AAED,SAASR,0BAAT;AACA,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction TimeDisplay({ session }) {\n\n    return (\n        <>\n            <h2 data-testid=\"session-title\">\n                {session?.label} for 25:00 minutes\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n                {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n        </>\n    )\n}\n\nfunction secondsToMinutesAndSeconds(totalSeconds) {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    const minutesString = minutes < 10 ? \"0\" + minutes : minutes.toString();\n    const secondsString = seconds < 10 ? `0${seconds}` : seconds.toString();\n    return `${minutesString}:${secondsString}`;\n}\n\nexport { secondsToMinutesAndSeconds };\nexport default TimeDisplay;"]},"metadata":{},"sourceType":"module"}