{"ast":null,"code":"var _jsxFileName = \"/Users/dexter/Thinkful/pomodoro-timer/src/pomodoro/StatusDisplay.js\";\nimport React from \"react\";\n\nfunction StatusDisplay({\n  session\n}) {\n  const remainingTime = secondsToMinutesAndSeconds(session === null || session === void 0 ? void 0 : session.timeRemaining);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, remainingTime, \" remaining\"));\n}\n\nfunction secondsToMinutesAndSeconds(totalSeconds) {\n  const minutes = totalSeconds / 60;\n  const seconds = totalSeconds % 60;\n  const minutesString = minutes < 10 ? \"0\" + minutes : minutes.toString();\n  const secondsString = seconds < 10 ? `0${seconds}` : seconds.toString();\n  return `${minutesString}:${secondsString}`;\n}\n\nexport { secondsToMinutesAndSeconds };\nexport default StatusDisplay;","map":{"version":3,"sources":["/Users/dexter/Thinkful/pomodoro-timer/src/pomodoro/StatusDisplay.js"],"names":["React","StatusDisplay","session","remainingTime","secondsToMinutesAndSeconds","timeRemaining","label","totalSeconds","minutes","seconds","minutesString","toString","secondsString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AAChC,QAAMC,aAAa,GAAGC,0BAA0B,CAACF,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEG,aAAV,CAAhD;AAEA,sBACI,uDACI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,OADL,aACKA,OADL,uBACKA,OAAO,CAAEI,KADd,uBADJ,eAKI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,aADL,eALJ,CADJ;AAWH;;AAED,SAASC,0BAAT,CAAoCG,YAApC,EAAkD;AAC9C,QAAMC,OAAO,GAAGD,YAAY,GAAG,EAA/B;AACA,QAAME,OAAO,GAAGF,YAAY,GAAG,EAA/B;AACA,QAAMG,aAAa,GAAGF,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAO,CAACG,QAAR,EAArD;AACA,QAAMC,aAAa,GAAGH,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAAO,CAACE,QAAR,EAArD;AACA,SAAQ,GAAED,aAAc,IAAGE,aAAc,EAAzC;AACH;;AAED,SAASR,0BAAT;AACA,eAAeH,aAAf","sourcesContent":["import React from \"react\";\n\nfunction StatusDisplay({ session }) {\n    const remainingTime = secondsToMinutesAndSeconds(session?.timeRemaining);\n\n    return (\n        <>\n            <h2 data-testid=\"session-title\">\n                {session?.label} for 25:00 minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n                {remainingTime} remaining\n            </p>\n        </>\n    )\n}\n\nfunction secondsToMinutesAndSeconds(totalSeconds) {\n    const minutes = totalSeconds / 60;\n    const seconds = totalSeconds % 60;\n    const minutesString = minutes < 10 ? \"0\" + minutes : minutes.toString();\n    const secondsString = seconds < 10 ? `0${seconds}` : seconds.toString();\n    return `${minutesString}:${secondsString}`;\n}\n\nexport { secondsToMinutesAndSeconds };\nexport default StatusDisplay;"]},"metadata":{},"sourceType":"module"}